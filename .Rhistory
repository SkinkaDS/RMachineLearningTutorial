library(tidyverse) #Funções de utilidade gerais para Data Science
library(tidyverse) #Funções de utilidade gerais para Data Science
library(rpart) # para arvores de regressão
library(randomForest) # para Random Forests
install.packages("randomForest")
library(randomForest) # para Random Forests
library(tidyverse) #Funções de utilidade gerais para Data Science
library(rpart) # para arvores de regressão
library(randomForest) # para Random Forests
melb_data <- read_csv("data/melb_data.csv") #Os dados
library(tidyverse) #Funções de utilidade gerais para Data Science
library(rpart) # para arvores de regressão
library(randomForest) # para Random Forests
melb_data <- read_csv("data/melb_data.csv") #Os dados
summary(melb_data)
View(melb_data)
fit <- rpart(Price ~ Rooms + Bathroom + Landsize + BuildingArea +
YearBuilt + Lattitude + Longtitude, data = melb_data)
plot(fit, uniform = TRUE) #Plota o gráfico da regressão
text(fit, cex=.6) # Adiciona textos e legendas e os torna 60% maior que o default
library(tidyverse) #Funções de utilidade gerais para Data Science
library(rpart) # para arvores de regressão
library(randomForest) # para Random Forests
melb_data <- read_csv("data/melb_data.csv") #Os dados
summary(melb_data)
fit <- rpart(Price ~ Rooms + Bathroom + Landsize + BuildingArea +
YearBuilt + Lattitude + Longtitude, data = melb_data)
plot(fit, uniform = TRUE) #Plota o gráfico da regressão
text(fit, cex=.6) # Adiciona textos e legendas e os torna 60% maior que o default
print("5 primeiras houses:")
print(head(melbourne_data))
print("5 primeiras houses:")
print(head(melb_data))
print("Predição para o preço das 5 primeiras casas ")
print(predict(fit, head(melb_data)))
print("O Preço real das 5 primeiras casas")
print(head(melb$Price))
print("5 primeiras houses:")
print(head(melb_data))
print("Predição para o preço das 5 primeiras casas ")
print(predict(fit, head(melb_data)))
print("O Preço real das 5 primeiras casas")
print(head(melb_data$Price))
library(tidyverse) #Funções de utilidade gerais para Data Science
library(rpart) # para arvores de regressão
library(randomForest) # para Random Forests
melb_data <- read_csv("data/melb_data.csv") #Os dados
summary(melb_data)
fit <- rpart(Price ~ Rooms + Bathroom + Landsize + BuildingArea +
YearBuilt + Lattitude + Longtitude, data = melb_data)
plot(fit, uniform = TRUE) #Plota o gráfico da regressão
text(fit, cex=.6) # Adiciona textos e legendas e os torna 60% maior que o default
print("5 primeiras houses:")
print(head(melb_data))
print("Predição para o preço das 5 primeiras casas ")
print(predict(fit, head(melb_data)))
print("O Preço real das 5 primeiras casas")
print(head(melb_data$Price))
library(tidyverse) #Funções de utilidade gerais para Data Science
library(rpart) # para arvores de regressão
library(randomForest) # para Random Forests
melb_data <- read_csv("data/melb_data.csv") #Os dados
summary(melb_data)
fit <- rpart(Price ~ Rooms + Bathroom + Landsize + BuildingArea +
YearBuilt + Lattitude + Longtitude, data = melb_data)
ggplot(fit, uniform = TRUE) #Plota o gráfico da regressão
library(tidyverse) #Funções de utilidade gerais para Data Science
library(rpart) # para arvores de regressão
library(randomForest) # para Random Forests
melb_data <- read_csv("data/melb_data.csv") #Os dados
summary(melb_data)
fit <- rpart(Price ~ Rooms + Bathroom + Landsize + BuildingArea +
YearBuilt + Lattitude + Longtitude, data = melb_data)
plot(fit, uniform = TRUE) #Plota o gráfico da regressão
text(fit, cex=.6) # Adiciona textos e legendas e os torna 60% maior que o default
print("5 primeiras houses:")
print(head(melb_data))
print("Predição para o preço das 5 primeiras casas ")
print(predict(fit, head(melb_data)))
print("O Preço real das 5 primeiras casas")
print(head(melb_data$Price))
library(tidyverse) #Funções de utilidade gerais para Data Science
library(rpart) # para arvores de regressão
library(randomForest) # para Random Forests
melb_data <- read_csv("data/melb_data.csv") #Os dados
summary(melb_data)
fit <- rpart(Price ~ Rooms + Bathroom + Landsize + BuildingArea +
YearBuilt + Lattitude + Longtitude, data = melb_data)
plot(fit, uniform = TRUE) #Plota o gráfico da regressão
text(fit, cex=.6) # Adiciona textos e legendas e os torna 60% maior que o default
print("6 primeiras casas:")
print(head(melb_data))
print("Predição para o preço das 6 primeiras casas ")
print(predict(fit, head(melb_data)))
print("O Preço real das 6 primeiras casas")
print(head(melb_data$Price))
library(modelr)
mae(model = fit, data = melb_data)
#Verificando quantos dados ficaram em cada um dos conjuntos
lapply(splitData, dim)
#Dividindo os dados
splitData <- resample_partition(melb_data, c(test = 0.3, train = 0.7))
#Verificando quantos dados ficaram em cada um dos conjuntos
lapply(splitData, dim)
library(tidyverse) #Funções de utilidade gerais para Data Science
library(rpart) # para arvores de regressão
library(randomForest) # para Random Forests
melb_data <- read_csv("data/melb_data.csv") #Os dados
summary(melb_data)
fit <- rpart(Price ~ Rooms + Bathroom + Landsize + BuildingArea +
YearBuilt + Lattitude + Longtitude, data = melb_data)
plot(fit, uniform = TRUE) #Plota o gráfico da regressão
text(fit, cex=.6) # Adiciona textos e legendas e os torna 60% maior que o default
print("6 primeiras casas:")
print(head(melb_data))
print("Predição para o preço das 6 primeiras casas ")
print(predict(fit, head(melb_data)))
print("O Preço real das 6 primeiras casas")
print(head(melb_data$Price))
library(modelr) #Pacote que contem a função MAE
mae(model = fit, data = melb_data)
#Dividindo os dados
splitData <- resample_partition(melb_data, c(test = 0.3, train = 0.7))
#Verificando quantos dados ficaram em cada um dos conjuntos
lapply(splitData, dim)
fit2 <- rpart(Price ~ Rooms + Bathroom + Landsize + BuildingArea +
YearBuilt + Lattitude + Longtitude, data = splitData$train)
mae(model = fit2, data = splitData$test)
library(tidyverse) #Funções de utilidade gerais para Data Science
library(rpart) # para arvores de regressão
library(randomForest) # para Random Forests
melb_data <- read_csv("data/melb_data.csv") #Os dados
summary(melb_data)
fit <- rpart(Price ~ Rooms + Bathroom + Landsize + BuildingArea +
YearBuilt + Lattitude + Longtitude, data = melb_data)
plot(fit, uniform = TRUE) #Plota o gráfico da regressão
text(fit, cex=.6) # Adiciona textos e legendas e os torna 60% maior que o default
print("6 primeiras casas:")
print(head(melb_data))
print("Predição para o preço das 6 primeiras casas ")
print(predict(fit, head(melb_data)))
print("O Preço real das 6 primeiras casas")
print(head(melb_data$Price))
library(modelr) #Pacote que contem a função MAE
mae(model = fit, data = melb_data)
#Dividindo os dados
splitData <- resample_partition(melb_data, c(test = 0.3, train = 0.7))
#Verificando quantos dados ficaram em cada um dos conjuntos
lapply(splitData, dim)
fit2 <- rpart(Price ~ Rooms + Bathroom + Landsize + BuildingArea +
YearBuilt + Lattitude + Longtitude, data = splitData$train)
mae(model = fit2, data = splitData$test)
